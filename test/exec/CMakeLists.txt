include(${CMAKESL_DIR}/cmake/cmsl_cmake_utils.cmake)

cmsl_add_test(
    NAME
        exec
    SOURCES
        add_subdirectory_test/add_subdirectory_smoke_test.cpp
        auto_type_smoke_test.cpp
        bool_type_smoke_test.cpp
        break_smoke_test.cpp
        builtin_function_caller_test.cpp
        class_smoke_test.cpp
        cmake_namespace_smoke_test.cpp
        comments_smoke_test.cpp
        declarative/declarative_format_smoke_test.cpp
        designated_initializers_smoke_test.cpp
        double_type_smoke_test.cpp
        enum_smoke_test.cpp
        executable_smoke_test.cpp
        expression_evaluation_visitor_test.cpp
        extern_type_smoke_test.cpp
        fatal_error_smoke_test.cpp
        for_loop_smoke_test.cpp
        forwarding_lists_type_smoke_test.cpp
        function_smoke_test.cpp
        if_else_smoke_test.cpp
        import_test/import_smoke_test.cpp
        instance_value_variant_test.cpp
        int_type_smoke_test.cpp
        library_smoke_test.cpp
        list_type_smoke_test.cpp
        mock/function_caller_mock.hpp
        mock/identifiers_context_mock.hpp
        mock/instance_mock.hpp
        mock/instances_holder_mock.hpp
        namespaces_smoke_test.cpp
        option_smoke_test.cpp
        product_type_smoke_test.cpp
        product_type_type_smoke_test.cpp
        project_smoke_test.cpp
        reference_smoke_tests.cpp
        scopes_smoke_test.cpp
        smoke_test_fixture.hpp
        static_variables_smoke_test.cpp
        string_type_smoke_tests.cpp
        ternary_operator_smoke_test.cpp
        variable_type_deduction.cpp
        version_type_smoke_tests.cpp
        void_type_smoke_test.cpp
        while_loop_smoke_test.cpp
    INCLUDE_DIRS
        ${CMAKESL_SOURCES_DIR}
        ${CMAKESL_FACADE_SOURCES_DIR}
        ${CMAKESL_DIR}
    LIBRARIES
        exec
        lexer
        ast
        sema
        errors_observer_mock
        tests_common
)

target_compile_definitions(exec_cmakesl_test
    PRIVATE
        -DCMAKESL_EXEC_SMOKE_TEST_ROOT_DIR="${CMAKE_CURRENT_SOURCE_DIR}"
)
